Preparation
-----------
Before restarting the portal server and/or deploying new software it should should be ensured
that there is no running job started by a user from one of the portals (default/cc). Unfortunately
there is no better way as to look closely at the running jobs in the Hadoop administration interface.

Building
--------
mvn clean package
or faster:
mvn clean package --offline -DskipTests=true

===========================================================================
Building the SNAP bundle

The snap bundle can either be created from a SNAP installation created with an installer for Linux,
or from a Maven-built software tree containing snap-engine, s2tbx and s3tbx.

* Execute the class org.esa.snap.runtime.BundleCreator in the module
  snap-engine/snap-runtime . The first parameter is the zip file, the second one the directory of
  a SNAP installation or built project for the bundle, e.g.

for installed SNAP:
  /opt/java/jdk1.8.0_102/bin/java -cp ./snap/modules/ext/org.esa.snap.snap-engine-utilities/org-esa-snap/snap-runtime.jar org.esa.snap.runtime.BundleCreator ~/tmp/snap-5.0-bundle.zip /opt/viewer/snap-5.0
for Maven-built software project:
  /opt/java/jdk1.8.0_102/bin/java -cp ./snap/snap-engine/snap-runtime/target/snap-runtime.jar org.esa.snap.runtime.BundleCreator ~/tmp/snap-6.0-SNAPSHOT-bundle.zip .
for Calvalus project:
  Build Calvalus with Maven and look into calvalus-snap/target/snap-bundle/
  
Remove:
 - xercesImpl.jar
 - *idepix*.jar
 - *c2r*.jar  

===========================================================================
Software archive
----------------
mkdir calvalus-software

cp calvalus-distribution/src/main/resources/INSTALL.txt     calvalus-software/
cp calvalus-distribution/src/main/resources/calvalus.config calvalus-software/
cp calvalus-distribution/target/calvalus-bundle/            calvalus-software/
cp calvalus-distribution/target/beam-bundle/                calvalus-software/
cp calvalus-distribution/target/cpt.jar                     calvalus-software/
tar czf calvalus-software.tar.gz  calvalus-software


Source archive
---------------
cd ..
tar cvzf calvalus-src-$(date +%Y-%m-%d).tgz  --exclude .git --exclude target calvalus
===========================================================================
Calvalus
--------
java -jar calvalus-distribution/target/cpt.jar -e --uninstall calvalus-2.19-SNAPSHOT
java -jar calvalus-distribution/target/cpt.jar -e --deploy  calvalus-distribution/target/calvalus-bundle/*.jar calvalus-2.19-SNAPSHOT

for lc-cci
----------
java -jar calvalus-distribution/target/cpt.jar -e --uninstall  calvalus-2.4-lc
java -jar calvalus-distribution/target/cpt.jar -e --deploy  calvalus-distribution/target/calvalus-bundle/*.jar calvalus-2.4-lc

BEAM
-----
java -jar calvalus-distribution/target/cpt.jar -e --uninstall beam-5.0.1
java -jar calvalus-distribution/target/cpt.jar -e --deploy  calvalus-distribution/target/beam-bundle/*.jar beam-5.0.1

SNAP
-----
On feeder: obtain SNAP installer from buildserver or http://step.esa.int/main/download/
On feeder: run installer, install SNAP to local directory $SNAP_DIR
On feeder: run java -cp $SNAP_DIR/snap/modules/ext/org.esa.snap.snap-core/org-esa-snap/snap-runtime.jar org.esa.snap.runtime.BundleCreator $SNAP_DIR snap-bundle.zip
On feeder: copy contents of snap-bundle.zip to /calvalus/software/1.0/<your_snap_bundle>

for diversity
-------------
java -jar calvalus-distribution/target/cpt.jar -e --uninstall calvalus-2.4-diversity
java -jar calvalus-distribution/target/cpt.jar -e --deploy  calvalus-distribution/target/calvalus-bundle/*.jar calvalus-2.4-diversity


Personal debugging
------------------
java -jar calvalus-distribution/target/cpt.jar -e --uninstall calvalus-SNAPSHOT-mz
java -jar calvalus-distribution/target/cpt.jar -e --deploy  calvalus-distribution/target/calvalus-bundle/*.jar calvalus-SNAPSHOT-mz

java -jar calvalus-distribution/target/cpt.jar -e --uninstall beam-SNAPSHOT-mz
java -jar calvalus-distribution/target/cpt.jar -e --deploy  calvalus-distribution/target/beam-bundle/*.jar beam-SNAPSHOT-mz

java -jar calvalus-distribution/target/cpt.jar -e --uninstall snap-SNAPSHOT-mz
java -jar calvalus-distribution/target/cpt.jar -e --deploy  calvalus-snap/target/snap-bundle/snap-all.jar snap-SNAPSHOT-mz

java -jar calvalus-distribution/target/cpt.jar -e --calvalus calvalus-SNAPSHOT-mz --beam beam-SNAPSHOT-mz test.xml


pfa-fex
-------
java -jar calvalus-distribution/target/cpt.jar -e --uninstall calvalus-2.4-fex
java -jar calvalus-distribution/target/cpt.jar -e --deploy  calvalus-distribution/target/calvalus-bundle/*.jar calvalus-2.4-fex

java -jar calvalus-distribution/target/cpt.jar -e --uninstall pfa-0.1-SNAPSHOT
java -jar calvalus-distribution/target/cpt.jar -e --deploy /home/marcoz/Workspace/pfa/bundle/*.jar pfa-0.1-SNAPSHOT

java -jar calvalus-distribution/target/cpt.jar -e --calvalus calvalus-2.4-fex /home/marcoz/Workspace/pfa/fex.xml

===========================================================================
Portal Software
-------------------
java -jar calvalus-distribution/target/cpt.jar -e --uninstall calvalus-2.19-SNAPSHOT
java -jar calvalus-distribution/target/cpt.jar -e --deploy  calvalus-distribution/target/calvalus-bundle/*.jar calvalus-2.19-SNAPSHOT
java -jar calvalus-distribution/target/cpt.jar -e --uninstall beam-5.0.1
java -jar calvalus-distribution/target/cpt.jar -e --deploy  calvalus-distribution/target/beam-bundle/*.jar beam-5.0.1

For SNAP
--------
SNAP_BUNDLE=calvalus-2.14-portal
java -jar calvalus-distribution/target/cpt.jar -e --uninstall $SNAP_BUNDLE
java -jar calvalus-distribution/target/cpt.jar -e --deploy  calvalus-distribution/target/calvalus-bundle/*.jar $SNAP_BUNDLE

SNAP_BUNDLE_PATH=/calvalus/software/1.0/$SNAP_BUNDLE
SPEC="group:calvalus:r-x,default:group:calvalus:r-x,group:calwps:r-x,default:group:calwps:r-x,group:coastcolour:r-x,default:group:coastcolour:r-x"
ssh hadoop@master00 hdfs dfs -setfacl -R -m $SPEC $SNAP_BUNDLE_PATH
ssh hadoop@master00 hdfs dfs -getfacl $SNAP_BUNDLE_PATH

WAR (for the portal)
--------------------
(cd calvalus-portal/target; scp calvalus-portal.war cvop@bcvm03: )
ssh cvop@bcvm03
cd /opt/apache-tomcat-7.0.53/
#./bin/shutdown.sh

# save staging
mv webapps/calvalus/staging temp/

# redeploy
rm -rf webapps/calvalus webapps/calvalus.war
rm -rf work/Catalina/localhost/calvalus/
mv /home/cvop/calvalus-portal.war webapps/calvalus.war

# restart
#./bin/startup.sh
tail -5f logs/catalina.out

# restore staging
rm -rf webapps/calvalus/staging/
mv temp/staging webapps/calvalus/

===========================================================================
CC Portal Software
-------------------

(cd calvalus-portal/target; scp -r calvalus-portal.war www/cc-patch cvop@bcvm03: )

ssh cvop@bcvm03
cd /opt/apache-tomcat-7.0.53

# save staging
# sudo umount /opt/apache-tomcat-7.0.53/webapps/ccprocessing/staging
mv webapps/ccprocessing/staging temp/


# redeploy
rm -r webapps/ccprocessing.war webapps/ccprocessing
mv /home/cvop/calvalus-portal.war webapps/ccprocessing.war
tail -5f logs/catalina.out
cp -r /home/cvop/cc-patch/* webapps/ccprocessing

# restore staging
# sudo mount /opt/apache-tomcat-7.0.53/webapps/ccprocessing/staging
rm -rf webapps/ccprocessing/staging/
mv temp/staging webapps/ccprocessing/

===========================================================================
BfG Portal Software
-------------------

(cd calvalus-portal/target; scp -r calvalus-portal.war www/calbfg-patch cvop@bcvm03: )

ssh cvop@bcvm03
cd /opt/apache-tomcat-7.0.53

# save staging
mv webapps/calbfg/staging temp/


# redeploy
rm -r webapps/calbfg.war webapps/calbfg
mv /home/cvop/calvalus-portal.war webapps/calbfg.war
tail -5f logs/catalina.out
cp -r /home/cvop/calbfg-patch/* webapps/calbfg

# restore staging
rm -rf webapps/calbfg/staging/
mv temp/staging webapps/calbfg/

===========================================================================
GeoServer deployment
----------------------------
Please refer to this page for deploying GeoServer as a web archive:
https://docs.geoserver.org/stable/en/user/installation/war.html

For example, with Tomcat running on port 8080 on localhost, the URL is http://localhost:8080/geoserver.

* Please note GeoServer requires a Java 8 environment and that Tomcat (7.0.65 or later) is recommended.

GeoServer security
----------------------------
The default GeoServer administration username/password is: admin/geoserver.
It is recommended to change these administration credentials, and also add new users and roles as required.

Please refer to this page for more information on the security subsystem in GeoServer:
https://docs.geoserver.org/stable/en/user/security/

GeoServer data directory
----------------------------
For web archive deployments, the built-in data directory is located in webapps under geoserver/data. But it is a good
idea to separate the data from the application. Using an external data directory allows for much easier upgrades, etc.

The data directory can be set in WEB-INF/web.xml, using a servlet context parameter named GEOSERVER_DATA_DIR.

Please refer to this page for more information on setting the data directory location:
https://docs.geoserver.org/stable/en/user/datadirectory/setting.html

GeoServer data management
----------------------------
Data in GeoServer is organised into workspaces, stores, and layers:

A workspace is a container which organises items.
Workspaces: https://docs.geoserver.org/stable/en/user/data/webadmin/workspaces.html

A store, which is assigned a workspace, connects to a data source that contains raster or vector data. A data source
can be a file or group of files, a table in a database, a single raster file, or a directory.
Stores: https://docs.geoserver.org/stable/en/user/data/webadmin/stores.html

A layer is configured to represent and publish data from data stores. Layers can be published in GeoServer using
standards such as WMS, WFS, WCS and KML.
Layers: https://docs.geoserver.org/stable/en/user/data/webadmin/layers.html
Layer Groups: https://docs.geoserver.org/stable/en/user/data/webadmin/layergroups.html

GeoServer - Calvalus support
----------------------------
Calvalus supports the publishing of GeoTIFF images to GeoServer using the Quicklooks feature.

The GeoServer data store name used by the upload service is the Calvalus product name. Any existing data store with
this product name within the workspace is replaced. Likewise, the GeoServer layer name used by the upload service is
also the Calvalus product name. Any existing layer with this name within the workspace is also replaced.
The upload service uses the default GeoServer raster style.

The Calvalus administrator needs to configure these GeoServer Quicklook settings in calvalus.properties to enable
GeoServer - Calvalus support:

# Quicklook upload handler. Note: only geoserver supported. Mandatory.
calvalus.ql.upload.handler = geoserver

# Quicklook upload URL. Mandatory. Example:
calvalus.ql.upload.URL = http://localhost:8080/geoserver/rest/

# Username and password for the GeoServer upload URL service. Optional. Example:
calvalus.ql.upload.username = admin
calvalus.ql.upload.password = geoserver

# GeoServer workspace to use. Mandatory. Example:
calvalus.ql.upload.workspace = calmar

Finally, ensure that the calvalus.portal.ql.wms portal access control and visual configuration option is set in
calvalus.properties. This setting is required to enable the quicklook WMS checkbox. Example:

# Quicklook WMS checkbox - access control and visual configuration
calvalus.portal.ql.wms = calvalus bc bg coastcolour calwps


